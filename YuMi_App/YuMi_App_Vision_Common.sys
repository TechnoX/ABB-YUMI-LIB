MODULE YuMi_App_Vision_Common(SYSMODULE,NOVIEW)
    !
    ! This code was generated by a tool.
    ! Changes to this file may cause incorrect behavior and will be lost if
    ! the code is regenerated.
    !--------------------------
    CONST string YuMi_App_Version_Vision:="1.0.0";

    TASK PERS wobjdata InspectionCameraWobj:=[FALSE,TRUE,"",[[21.4601,-1062.56,1134.32],[0.999437,-0.00286496,-0.00635449,0.0328053]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata WObjVision_PickUp:=[FALSE,TRUE,"",[[21.4601,-1062.56,1134.32],[0.999437,-0.00286496,-0.00635449,0.0328053]],[[155.055,168.396,-1425.3],[0.344981,0.140055,-0.0420221,0.92715]]];

    !**********************************
    !**********Standard parameters needed for Camera Calibration **********************************************
    !***Do not change these.

    TASK PERS num HandCamera_Kinv{3,3}:=[[0.000603527,-1.21629E-06,-0.403364],[0,0.000604937,-0.296785],[0,0,1]];
    TASK PERS num HandCamera_K{3,3}:=[[1656.93,3.33143,669.334],[0,1653.06,490.605],[0,0,1]];
    TASK PERS tooldata tHandCamera:=[TRUE,[[-6.60187,25.9996,36.7599],[0.497457,-0.508011,-0.501783,-0.49262]],[0.23,[8.2,11.7,52],[1,0,0,0],0.00021,0.00024,9E-05]];

    !TASK PERS num HandCamera_Kinv{3,3}:=[[0.000606484,-1.58454E-06,-0.396064],[0,0.000605587,-0.291102],[0,0,1]];
    !TASK PERS num HandCamera_K{3,3}:=[[1648.85,4.31427,654.306],[0,1651.29,480.694],[0,0,1]];
    !TASK PERS tooldata tHandCamera:=[TRUE,[[-7.46452,26.5632,34.4859],[0.503125,-0.494913,-0.510782,-0.490946]],[0.23,[8.2,11.7,52],[1,0,0,0],0.00021,0.00024,9E-05]];

    TASK PERS wobjdata WObj_VisionTest:=[FALSE,TRUE,"",[[459.134,163.411,389.156],[0.0294562,-0.698647,0.714295,-0.028404]],[[99.0572,21.0114,376.763],[0.714295,-0.028404,0.0294562,0.698647]]];
    !PERS tooldata tVisionTest:=[TRUE,[[-0.169801,-0.114683,114.947],[1,0,0,0]],[0.244,[7.5,11.8,52.7],[1,0,0,0],0.00021,0.00023,8E-05]];


    LOCAL CONST num calibcameraPoints:=15;
    TASK PERS robtarget pPick:=[[0,0,5],[0.0570794,-0.0194117,0.00363978,0.998174],[1,-2,-1,11],[-152.388,9E+09,9E+09,9E+09,9E+09,9E+09]];

    TASK PERS num VisionStatus:=1;

    TASK PERS string YuMi_App_VisionCamera:="HandCameraL";
    TASK PERS num Yumi_App_ZOffset:=11.7;
    TASK PERS pose Yumi_App_Table_Pose:=[[0,0,0],[1,0,0,0]];

    PROC InitCamera(VAR cameradev camera,string job\switch ReloadJob)
        !Load camera job that locates the gripper marker
        CamSetProgramMode camera;
        WaitTime 1;

        IF CamGetLoadedJob(camera)<>job OR Present(ReloadJob) THEN
            CamLoadJob camera,job;
        ENDIF

        CamSetRunMode camera;
        WaitTime 1;
        !Flaw in RobotWare WI111267

    ERROR
        IF ERRNO=ERR_CAM_COM_TIMEOUT THEN
            WaitTime 1.0;
            RETRY;
        ENDIF
    ENDPROC

    PROC TakePicture(VAR cameradev camera,VAR num result{*})
        !Requests an image, finds the position and stores X, Y and angle in result.
        VAR cameratarget cameraResult;

        CamReqImage camera;
        CamGetResult camera,cameraResult\MaxTime:=5;

        result{1}:=cameraResult.cframe.trans.x;
        result{2}:=cameraResult.cframe.trans.y;
        !result{3}:=CameraResult.cframe.trans.z;
        result{3}:=EulerZYX(\Z,cameraResult.cframe.rot);

        WaitTime 2.0;
        VisionStatus:=3;

    ERROR
        IF ERRNO=ERR_CAM_MAXTIME THEN
            TPWrite "Could not find the target";
            WaitTime 2.0;
            VisionStatus:=2;
            Stop;
        ENDIF
    ENDPROC



    PROC RestoreCtrlToCamera(var cameradev cam,bool replaceexistingfiles)
        VAR string ctrldirname:="HOME:/IV/";
        VAR dir ctrldirectory;
        VAR string camdirname;
        VAR string tempfilename;
        VAR string tempcamfilepath;
        VAR string tempctrlfilepath;
        VAR bool oktocopy:=FALSE;

        camdirname:=CamGetName(cam)+":/";
        ctrldirname:=ctrldirname+"/";
        OpenDir ctrldirectory,ctrldirname;

        WHILE ReadDir(ctrldirectory,tempfilename) DO
            !Only copy .job and .cxd files
            IF ((StrMatch(tempfilename,1,".job")<=strlen(tempfilename)) OR (StrMatch(tempfilename,1,".cxd")<=strlen(tempfilename))) AND tempfilename<>"." AND tempfilename<>".." THEN
                oktocopy:=TRUE;
            ELSE
                oktocopy:=FALSE;
            ENDIF

            IF oktocopy THEN
                tempcamfilepath:=camdirname+tempfilename;
                tempctrlfilepath:=ctrldirname+tempfilename;
                CopyFile tempctrlfilepath,tempcamfilepath;
            ENDIF
        ENDWHILE

        CloseDir ctrldirectory;
    ERROR
        IF ERRNO=ERR_FILEEXIST THEN
            IF replaceexistingfiles THEN
                RemoveFile tempcamfilepath;
                RETRY;
            ELSE
                TRYNEXT;
            ENDIF
        ENDIF
    ENDPROC

    FUNC wobjdata CalcVisionWobjHandCamera(robtarget pTakePicture,pos CameraValue,\pose psImagePlane)
        VAR pose tablePose;
        VAR num nCameraFrameAngle;
        VAR pose psImagePlaneProjection;
        VAR pose psIPinv;
        VAR wobjdata retWobj;

        retWobj.robhold:=FALSE;
        retWobj.ufprog:=TRUE;
        IF Present(psImagePlane) THEN
            tablePose:=psImagePlane;
        ELSE
            tablePose.trans:=[0,0,0];
            tablePose.rot:=OrientZYX(180,0,180);
        ENDIF
        retWobj.uframe:=[pTakePicture.trans,pTakePicture.rot];
        !Express the ImagePlane in CameraFrame
        psImagePlaneProjection:=PoseMult(PoseInv(retWobj.uframe),tablePose);
        psIPinv:=PoseInv(psImagePlaneProjection);
        !Take Z angle of CameraFrame expressed in tablepose
        nCameraFrameAngle:=EulerZYX(\Z,psIPinv.rot);
        !Add the CameraFrame rotation about Z axis.  
        psImagePlaneProjection:=PoseMult(psImagePlaneProjection,[[0,0,0],OrientZYX(nCameraFrameAngle,0,0)]);

        retWobj.oframe:=CalcObjFrame(psImagePlaneProjection,[CameraValue.x,CameraValue.y,CameraValue.z],-Yumi_App_ZOffset,HandCamera_Kinv);
        retWobj.oframe:=PoseMult(retWobj.oframe,[[0,0,0],OrientZYX(0,180,0)]);
        RETURN retWobj;
    ENDFUNC
ENDMODULE